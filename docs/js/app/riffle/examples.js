// Compiled by ClojureScript 1.9.227 {:static-fns true, :optimize-constants true}
goog.provide('riffle.examples');
goog.require('cljs.core');
riffle.examples.meetngreet = cljs.core.PersistentHashMap.fromArrays([cljs.core.cst$kw$next_DASH_id,cljs.core.cst$kw$pred_DASH_ids,cljs.core.cst$kw$title,cljs.core.cst$kw$context_DASH_ids,cljs.core.cst$kw$stage_DASH_ids,cljs.core.cst$kw$type_DASH_ids,cljs.core.cst$kw$prev_DASH_id,cljs.core.cst$kw$interaction_DASH_style,cljs.core.cst$kw$things,cljs.core.cst$kw$bwd_DASH_ids,cljs.core.cst$kw$context_DASH_id],[(41),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [(25),(29)], null),"meet and greet",new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [(13)], null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [(6)], null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [(0)], null),(38),cljs.core.cst$kw$cyoa,cljs.core.PersistentHashMap.fromArrays([(0),(7),(20),(21),(31),(32),(33),(13),(36),(29),(6),(25),(34),(35),(19),(9),(38),(18),(37),(8)],[new cljs.core.PersistentArrayMap(null, 5, [cljs.core.cst$kw$name,"char",cljs.core.cst$kw$term_DASH_ids,new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [(19),(20),(21)], null),cljs.core.cst$kw$id,(0),cljs.core.cst$kw$is,cljs.core.cst$kw$type,cljs.core.cst$kw$parent_DASH_id,null], null),new cljs.core.PersistentArrayMap(null, 7, [cljs.core.cst$kw$choice_DASH_text,"$C1: introduce yourself to $C2",cljs.core.cst$kw$description,"\"Hello, $C2. My name is $C1.\"",cljs.core.cst$kw$premise_DASH_ids,new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [(8),(32)], null),cljs.core.cst$kw$result_DASH_ids,new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [(9),(31)], null),cljs.core.cst$kw$id,(7),cljs.core.cst$kw$is,cljs.core.cst$kw$rule,cljs.core.cst$kw$parent_DASH_id,(6)], null),new cljs.core.PersistentArrayMap(null, 4, [cljs.core.cst$kw$input_DASH_str,"juliet",cljs.core.cst$kw$id,(20),cljs.core.cst$kw$is,cljs.core.cst$kw$term,cljs.core.cst$kw$parent_DASH_id,(0)], null),new cljs.core.PersistentArrayMap(null, 4, [cljs.core.cst$kw$input_DASH_str,"mercutio",cljs.core.cst$kw$id,(21),cljs.core.cst$kw$is,cljs.core.cst$kw$term,cljs.core.cst$kw$parent_DASH_id,(0)], null),new cljs.core.PersistentArrayMap(null, 4, [cljs.core.cst$kw$input_DASH_str,"met $C2 $C1",cljs.core.cst$kw$id,(31),cljs.core.cst$kw$is,cljs.core.cst$kw$result,cljs.core.cst$kw$parent_DASH_id,(7)], null),new cljs.core.PersistentArrayMap(null, 5, [cljs.core.cst$kw$input_DASH_str,"unmet $C2 $C1",cljs.core.cst$kw$consume_QMARK_,true,cljs.core.cst$kw$id,(32),cljs.core.cst$kw$is,cljs.core.cst$kw$premise,cljs.core.cst$kw$parent_DASH_id,(7)], null),new cljs.core.PersistentArrayMap(null, 4, [cljs.core.cst$kw$input_DASH_str,"unmet juliet romeo",cljs.core.cst$kw$id,(33),cljs.core.cst$kw$is,cljs.core.cst$kw$fact,cljs.core.cst$kw$parent_DASH_id,(13)], null),new cljs.core.PersistentArrayMap(null, 6, [cljs.core.cst$kw$name,"init",cljs.core.cst$kw$stage_DASH_id,(6),cljs.core.cst$kw$fact_DASH_ids,new cljs.core.PersistentVector(null, 6, 5, cljs.core.PersistentVector.EMPTY_NODE, [(18),(33),(34),(35),(36),(37)], null),cljs.core.cst$kw$id,(13),cljs.core.cst$kw$is,cljs.core.cst$kw$context,cljs.core.cst$kw$parent_DASH_id,null], null),new cljs.core.PersistentArrayMap(null, 4, [cljs.core.cst$kw$input_DASH_str,"unmet juliet mercutio",cljs.core.cst$kw$id,(36),cljs.core.cst$kw$is,cljs.core.cst$kw$fact,cljs.core.cst$kw$parent_DASH_id,(13)], null),new cljs.core.PersistentArrayMap(null, 4, [cljs.core.cst$kw$input_DASH_str,"met char char",cljs.core.cst$kw$id,(29),cljs.core.cst$kw$is,cljs.core.cst$kw$pred,cljs.core.cst$kw$parent_DASH_id,null], null),new cljs.core.PersistentArrayMap(null, 7, [cljs.core.cst$kw$name,"main",cljs.core.cst$kw$selection,cljs.core.cst$kw$interactive,cljs.core.cst$kw$rule_DASH_ids,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [(7)], null),cljs.core.cst$kw$qui_DASH_rule_DASH_ids,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [(38)], null),cljs.core.cst$kw$id,(6),cljs.core.cst$kw$is,cljs.core.cst$kw$stage,cljs.core.cst$kw$parent_DASH_id,null], null),new cljs.core.PersistentArrayMap(null, 4, [cljs.core.cst$kw$input_DASH_str,"unmet char char",cljs.core.cst$kw$id,(25),cljs.core.cst$kw$is,cljs.core.cst$kw$pred,cljs.core.cst$kw$parent_DASH_id,null], null),new cljs.core.PersistentArrayMap(null, 4, [cljs.core.cst$kw$input_DASH_str,"unmet romeo mercutio",cljs.core.cst$kw$id,(34),cljs.core.cst$kw$is,cljs.core.cst$kw$fact,cljs.core.cst$kw$parent_DASH_id,(13)], null),new cljs.core.PersistentArrayMap(null, 4, [cljs.core.cst$kw$input_DASH_str,"unmet mercutio romeo",cljs.core.cst$kw$id,(35),cljs.core.cst$kw$is,cljs.core.cst$kw$fact,cljs.core.cst$kw$parent_DASH_id,(13)], null),new cljs.core.PersistentArrayMap(null, 4, [cljs.core.cst$kw$input_DASH_str,"romeo",cljs.core.cst$kw$id,(19),cljs.core.cst$kw$is,cljs.core.cst$kw$term,cljs.core.cst$kw$parent_DASH_id,(0)], null),new cljs.core.PersistentArrayMap(null, 4, [cljs.core.cst$kw$input_DASH_str,"met $C1 $C2",cljs.core.cst$kw$id,(9),cljs.core.cst$kw$is,cljs.core.cst$kw$result,cljs.core.cst$kw$parent_DASH_id,(7)], null),new cljs.core.PersistentArrayMap(null, 8, [cljs.core.cst$kw$choice_DASH_text,"end",cljs.core.cst$kw$description,"The end.",cljs.core.cst$kw$premise_DASH_ids,cljs.core.PersistentVector.EMPTY,cljs.core.cst$kw$result_DASH_ids,cljs.core.PersistentVector.EMPTY,cljs.core.cst$kw$goto_DASH_id,null,cljs.core.cst$kw$id,(38),cljs.core.cst$kw$is,cljs.core.cst$kw$qui_DASH_rule,cljs.core.cst$kw$parent_DASH_id,(6)], null),new cljs.core.PersistentArrayMap(null, 4, [cljs.core.cst$kw$input_DASH_str,"unmet romeo juliet",cljs.core.cst$kw$id,(18),cljs.core.cst$kw$is,cljs.core.cst$kw$fact,cljs.core.cst$kw$parent_DASH_id,(13)], null),new cljs.core.PersistentArrayMap(null, 4, [cljs.core.cst$kw$input_DASH_str,"unmet mercutio juliet",cljs.core.cst$kw$id,(37),cljs.core.cst$kw$is,cljs.core.cst$kw$fact,cljs.core.cst$kw$parent_DASH_id,(13)], null),new cljs.core.PersistentArrayMap(null, 5, [cljs.core.cst$kw$input_DASH_str,"unmet $C1 $C2",cljs.core.cst$kw$consume_QMARK_,true,cljs.core.cst$kw$id,(8),cljs.core.cst$kw$is,cljs.core.cst$kw$premise,cljs.core.cst$kw$parent_DASH_id,(7)], null)]),cljs.core.PersistentVector.EMPTY,(13)]);
riffle.examples.hello = new cljs.core.PersistentArrayMap(null, 6, [cljs.core.cst$kw$types,new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentArrayMap(null, 2, [cljs.core.cst$kw$name,cljs.core.cst$sym$character,cljs.core.cst$kw$terms,new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$sym$max,cljs.core.cst$sym$chris,cljs.core.cst$sym$kate,cljs.core.cst$sym$quinn], null)], null),new cljs.core.PersistentArrayMap(null, 2, [cljs.core.cst$kw$name,cljs.core.cst$sym$world,cljs.core.cst$kw$terms,new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$sym$earth,cljs.core.cst$sym$mars,cljs.core.cst$sym$moon], null)], null),new cljs.core.PersistentArrayMap(null, 2, [cljs.core.cst$kw$name,cljs.core.cst$sym$nat,cljs.core.cst$kw$terms,new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$sym$z], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$sym$s,cljs.core.cst$sym$nat], null)], null)], null),new cljs.core.PersistentArrayMap(null, 2, [cljs.core.cst$kw$name,cljs.core.cst$sym$nat_DASH_option,cljs.core.cst$kw$terms,new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$sym$some,cljs.core.cst$sym$nat], null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$sym$none], null)], null)], null)], null),cljs.core.cst$kw$preds,new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$sym$unmet,cljs.core.cst$sym$character,cljs.core.cst$sym$character], null),new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$sym$met,cljs.core.cst$sym$character,cljs.core.cst$sym$character], null),new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$sym$unseen,cljs.core.cst$sym$character,cljs.core.cst$sym$world], null),new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$sym$seen,cljs.core.cst$sym$character,cljs.core.cst$sym$world], null)], null),cljs.core.cst$kw$bwds,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentArrayMap(null, 2, [cljs.core.cst$kw$sig,new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$sym$plus,cljs.core.cst$sym$nat,cljs.core.cst$sym$nat,cljs.core.cst$sym$nat], null),cljs.core.cst$kw$cases,new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$sym$plus,cljs.core.cst$sym$z,cljs.core.cst$sym$$N,cljs.core.cst$sym$$N], null),new cljs.core.PersistentArrayMap(null, 2, [cljs.core.cst$kw$pattern,new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$sym$plus,new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$sym$s,cljs.core.cst$sym$$N], null),cljs.core.cst$sym$$M,new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$sym$s,cljs.core.cst$sym$$Sum], null)], null),cljs.core.cst$kw$goals,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$sym$plus,cljs.core.cst$sym$$N,cljs.core.cst$sym$$M,cljs.core.cst$sym$$Sum], null)], null)], null)], null)], null)], null),cljs.core.cst$kw$facts,new cljs.core.PersistentVector(null, 24, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$sym$unmet,cljs.core.cst$sym$max,cljs.core.cst$sym$chris], null),new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$sym$unmet,cljs.core.cst$sym$max,cljs.core.cst$sym$kate], null),new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$sym$unmet,cljs.core.cst$sym$max,cljs.core.cst$sym$quinn], null),new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$sym$unmet,cljs.core.cst$sym$chris,cljs.core.cst$sym$max], null),new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$sym$unmet,cljs.core.cst$sym$chris,cljs.core.cst$sym$kate], null),new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$sym$unmet,cljs.core.cst$sym$chris,cljs.core.cst$sym$quinn], null),new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$sym$unmet,cljs.core.cst$sym$kate,cljs.core.cst$sym$max], null),new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$sym$unmet,cljs.core.cst$sym$kate,cljs.core.cst$sym$chris], null),new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$sym$unmet,cljs.core.cst$sym$kate,cljs.core.cst$sym$quinn], null),new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$sym$unmet,cljs.core.cst$sym$quinn,cljs.core.cst$sym$max], null),new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$sym$unmet,cljs.core.cst$sym$quinn,cljs.core.cst$sym$chris], null),new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$sym$unmet,cljs.core.cst$sym$quinn,cljs.core.cst$sym$kate], null),new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$sym$seen,cljs.core.cst$sym$max,cljs.core.cst$sym$earth], null),new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$sym$unseen,cljs.core.cst$sym$max,cljs.core.cst$sym$mars], null),new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$sym$unseen,cljs.core.cst$sym$max,cljs.core.cst$sym$moon], null),new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$sym$unseen,cljs.core.cst$sym$chris,cljs.core.cst$sym$earth], null),new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$sym$unseen,cljs.core.cst$sym$chris,cljs.core.cst$sym$mars], null),new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$sym$seen,cljs.core.cst$sym$chris,cljs.core.cst$sym$moon], null),new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$sym$unseen,cljs.core.cst$sym$kate,cljs.core.cst$sym$earth], null),new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$sym$seen,cljs.core.cst$sym$kate,cljs.core.cst$sym$mars], null),new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$sym$unseen,cljs.core.cst$sym$kate,cljs.core.cst$sym$moon], null),new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$sym$seen,cljs.core.cst$sym$quinn,cljs.core.cst$sym$earth], null),new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$sym$unseen,cljs.core.cst$sym$quinn,cljs.core.cst$sym$mars], null),new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$sym$seen,cljs.core.cst$sym$quinn,cljs.core.cst$sym$moon], null)], null),cljs.core.cst$kw$stages,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentArrayMap(null, 3, [cljs.core.cst$kw$name,cljs.core.cst$sym$main,cljs.core.cst$kw$selection,cljs.core.cst$kw$interactive,cljs.core.cst$kw$rules,new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentArrayMap(null, 4, [cljs.core.cst$kw$name,cljs.core.cst$sym$meet,cljs.core.cst$kw$consume,new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$sym$unmet,cljs.core.cst$sym$$C1,cljs.core.cst$sym$$C2], null),new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$sym$unmet,cljs.core.cst$sym$$C2,cljs.core.cst$sym$$C1], null)], null),cljs.core.cst$kw$check,cljs.core.PersistentVector.EMPTY,cljs.core.cst$kw$results,new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$sym$met,cljs.core.cst$sym$$C1,cljs.core.cst$sym$$C2], null),new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$sym$met,cljs.core.cst$sym$$C2,cljs.core.cst$sym$$C1], null)], null)], null),new cljs.core.PersistentArrayMap(null, 4, [cljs.core.cst$kw$name,cljs.core.cst$sym$see,cljs.core.cst$kw$consume,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$sym$unseen,cljs.core.cst$sym$$C,cljs.core.cst$sym$$World], null)], null),cljs.core.cst$kw$check,cljs.core.PersistentVector.EMPTY,cljs.core.cst$kw$results,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$sym$seen,cljs.core.cst$sym$$C,cljs.core.cst$sym$$World], null)], null)], null)], null)], null)], null),cljs.core.cst$kw$stage,cljs.core.cst$sym$main], null);
riffle.examples.romeo = new cljs.core.PersistentArrayMap(null, 6, [cljs.core.cst$kw$types,new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentArrayMap(null, 2, [cljs.core.cst$kw$name,cljs.core.cst$sym$character,cljs.core.cst$kw$terms,new cljs.core.PersistentVector(null, 8, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$sym$romeo,cljs.core.cst$sym$juliet,cljs.core.cst$sym$montague,cljs.core.cst$sym$capulet,cljs.core.cst$sym$mercutio,cljs.core.cst$sym$nurse,cljs.core.cst$sym$tybalt,cljs.core.cst$sym$apothecary], null)], null),new cljs.core.PersistentArrayMap(null, 2, [cljs.core.cst$kw$name,cljs.core.cst$sym$location,cljs.core.cst$kw$terms,new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$sym$town,cljs.core.cst$sym$mon_DASH_house,cljs.core.cst$sym$cap_DASH_house], null)], null),new cljs.core.PersistentArrayMap(null, 2, [cljs.core.cst$kw$name,cljs.core.cst$sym$object,cljs.core.cst$kw$terms,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$sym$weapon], null)], null)], null),cljs.core.cst$kw$preds,new cljs.core.PersistentVector(null, 16, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$sym$at,cljs.core.cst$sym$character,cljs.core.cst$sym$location], null),new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$sym$has,cljs.core.cst$sym$character,cljs.core.cst$sym$object], null),new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$sym$wants,cljs.core.cst$sym$character,cljs.core.cst$sym$object], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$sym$dead,cljs.core.cst$sym$character], null),new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$sym$murdered,cljs.core.cst$sym$character,cljs.core.cst$sym$character], null),new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$sym$anger,cljs.core.cst$sym$character,cljs.core.cst$sym$character], null),new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$sym$eros,cljs.core.cst$sym$character,cljs.core.cst$sym$character], null),new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$sym$philia,cljs.core.cst$sym$character,cljs.core.cst$sym$character], null),new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$sym$married,cljs.core.cst$sym$character,cljs.core.cst$sym$character], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$sym$unmarried,cljs.core.cst$sym$character], null),new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$sym$neutral,cljs.core.cst$sym$character,cljs.core.cst$sym$character], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$sym$depressed,cljs.core.cst$sym$character], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$sym$suicidal,cljs.core.cst$sym$character], null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$sym$boredom], null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$sym$nonfinal], null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$sym$final], null)], null),cljs.core.cst$kw$bwds,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentArrayMap(null, 2, [cljs.core.cst$kw$sig,new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$sym$accessible,cljs.core.cst$sym$location,cljs.core.cst$sym$location], null),cljs.core.cst$kw$cases,new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$sym$accessible,cljs.core.cst$sym$mon_DASH_house,cljs.core.cst$sym$town], null),new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$sym$accessible,cljs.core.cst$sym$town,cljs.core.cst$sym$mon_DASH_house], null),new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$sym$accessible,cljs.core.cst$sym$cap_DASH_house,cljs.core.cst$sym$town], null),new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$sym$accessible,cljs.core.cst$sym$town,cljs.core.cst$sym$cap_DASH_house], null)], null)], null)], null),cljs.core.cst$kw$facts,cljs.core.PersistentVector.fromArray([new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$sym$at,cljs.core.cst$sym$romeo,cljs.core.cst$sym$town], null),new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$sym$at,cljs.core.cst$sym$montague,cljs.core.cst$sym$mon_DASH_house], null),new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$sym$at,cljs.core.cst$sym$capulet,cljs.core.cst$sym$cap_DASH_house], null),new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$sym$at,cljs.core.cst$sym$mercutio,cljs.core.cst$sym$town], null),new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$sym$at,cljs.core.cst$sym$nurse,cljs.core.cst$sym$cap_DASH_house], null),new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$sym$at,cljs.core.cst$sym$juliet,cljs.core.cst$sym$town], null),new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$sym$at,cljs.core.cst$sym$tybalt,cljs.core.cst$sym$town], null),new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$sym$at,cljs.core.cst$sym$apothecary,cljs.core.cst$sym$town], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$sym$unmarried,cljs.core.cst$sym$romeo], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$sym$unmarried,cljs.core.cst$sym$juliet], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$sym$unmarried,cljs.core.cst$sym$nurse], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$sym$unmarried,cljs.core.cst$sym$mercutio], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$sym$unmarried,cljs.core.cst$sym$tybalt], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$sym$unmarried,cljs.core.cst$sym$apothecary], null),new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$sym$anger,cljs.core.cst$sym$montague,cljs.core.cst$sym$capulet], null),new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$sym$anger,cljs.core.cst$sym$capulet,cljs.core.cst$sym$montague], null),new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$sym$anger,cljs.core.cst$sym$tybalt,cljs.core.cst$sym$romeo], null),new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$sym$anger,cljs.core.cst$sym$capulet,cljs.core.cst$sym$romeo], null),new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$sym$anger,cljs.core.cst$sym$montague,cljs.core.cst$sym$tybalt], null),new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$sym$philia,cljs.core.cst$sym$mercutio,cljs.core.cst$sym$romeo], null),new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$sym$philia,cljs.core.cst$sym$romeo,cljs.core.cst$sym$mercutio], null),new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$sym$philia,cljs.core.cst$sym$montague,cljs.core.cst$sym$romeo], null),new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$sym$philia,cljs.core.cst$sym$capulet,cljs.core.cst$sym$juliet], null),new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$sym$has,cljs.core.cst$sym$tybalt,cljs.core.cst$sym$weapon], null),new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$sym$has,cljs.core.cst$sym$romeo,cljs.core.cst$sym$weapon], null),new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$sym$has,cljs.core.cst$sym$apothecary,cljs.core.cst$sym$weapon], null),new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$sym$philia,cljs.core.cst$sym$juliet,cljs.core.cst$sym$nurse], null),new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$sym$philia,cljs.core.cst$sym$nurse,cljs.core.cst$sym$juliet], null),new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$sym$neutral,cljs.core.cst$sym$nurse,cljs.core.cst$sym$romeo], null),new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$sym$neutral,cljs.core.cst$sym$mercutio,cljs.core.cst$sym$juliet], null),new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$sym$neutral,cljs.core.cst$sym$juliet,cljs.core.cst$sym$mercutio], null),new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$sym$neutral,cljs.core.cst$sym$apothecary,cljs.core.cst$sym$nurse], null),new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$sym$neutral,cljs.core.cst$sym$nurse,cljs.core.cst$sym$apothecary], null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$sym$nonfinal], null)], true),cljs.core.cst$kw$stages,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentArrayMap(null, 4, [cljs.core.cst$kw$name,cljs.core.cst$sym$all,cljs.core.cst$kw$selection,cljs.core.cst$kw$interactive,cljs.core.cst$kw$rules,cljs.core.PersistentVector.EMPTY,cljs.core.cst$kw$quiescence_DASH_rules,cljs.core.PersistentVector.EMPTY], null)], null),cljs.core.cst$kw$stage,cljs.core.cst$sym$all], null);
